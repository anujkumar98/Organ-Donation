/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package userInterface.HospitalAdminWorkArea;

import Business.Employee.Employee;
import Business.Patient.PatientVisit;
import DatabaseUtility.DatabaseHandleHospitalRoles;
import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Lenovo
 */
public class HospitalAdminManageReceiverJPanel extends javax.swing.JPanel {

    /**
     * Creates new form DoctorManageReceiverJPanel
     */
    private static Employee emp;
    DatabaseHandleHospitalRoles dbCon=new DatabaseHandleHospitalRoles();
    public HospitalAdminManageReceiverJPanel(Employee e) {
        initComponents();
        this.emp=e;
        int adminId=emp.getId();
        populateTable(dbCon.fetchDoctorDonorRevicerList(adminId,"Reciver"));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTableReceiverDetails = new javax.swing.JTable();
        jButtonViewReceiverInfo = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextReceviersName = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jButtonReceiverSave = new javax.swing.JButton();
        jButtonReceiverReportToAdmin = new javax.swing.JButton();
        jCheckBoxLiverR = new javax.swing.JCheckBox();
        jCheckPancreasR = new javax.swing.JCheckBox();
        jCheckBoxHeartR = new javax.swing.JCheckBox();
        jCheckBoxIntestinesR = new javax.swing.JCheckBox();
        jCheckBoxLungR = new javax.swing.JCheckBox();
        jCheckBoxkKidneyR = new javax.swing.JCheckBox();

        jTableReceiverDetails.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "PATIENT_RECIEVER ID", "RECEIVER NAME", "RECEIVER AGE", "DATE", "ORGAN NAME"
            }
        ));
        jScrollPane1.setViewportView(jTableReceiverDetails);

        jButtonViewReceiverInfo.setText("VIEW RECEIVER");

        jLabel1.setText("RECEIVER NAME");

        jLabel3.setText("SELECT ORGAN:");

        jButtonReceiverSave.setText("SAVE");

        jButtonReceiverReportToAdmin.setText("SEND REPORT TO ADMIN");

        jCheckBoxLiverR.setText("LIVER");

        jCheckPancreasR.setText("PANCREAS");

        jCheckBoxHeartR.setText("HEART");

        jCheckBoxIntestinesR.setText("INTESTINES");

        jCheckBoxLungR.setText("LUNG");

        jCheckBoxkKidneyR.setText("KIDNEY");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1186, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 7, Short.MAX_VALUE)
                        .addComponent(jLabel2))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(477, 477, 477)
                        .addComponent(jButtonViewReceiverInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(7, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel3))
                .addGap(88, 88, 88)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextReceviersName, javax.swing.GroupLayout.PREFERRED_SIZE, 309, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCheckBoxLiverR)
                    .addComponent(jCheckBoxHeartR)
                    .addComponent(jCheckBoxLungR))
                .addGap(323, 323, 323))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jCheckPancreasR, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(355, 355, 355)
                        .addComponent(jButtonReceiverSave, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(82, 82, 82)
                        .addComponent(jButtonReceiverReportToAdmin, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jCheckBoxkKidneyR)
                            .addComponent(jCheckBoxIntestinesR, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(415, 415, 415))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(277, 277, 277)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 57, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)))
                .addComponent(jButtonViewReceiverInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextReceviersName, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(44, 44, 44)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jCheckBoxLiverR)
                    .addComponent(jCheckPancreasR))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBoxHeartR)
                    .addComponent(jCheckBoxIntestinesR))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBoxLungR)
                    .addComponent(jCheckBoxkKidneyR))
                .addGap(62, 62, 62)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButtonReceiverSave, javax.swing.GroupLayout.DEFAULT_SIZE, 43, Short.MAX_VALUE)
                    .addComponent(jButtonReceiverReportToAdmin, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(43, 43, 43))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonReceiverReportToAdmin;
    private javax.swing.JButton jButtonReceiverSave;
    private javax.swing.JButton jButtonViewReceiverInfo;
    private javax.swing.JCheckBox jCheckBoxHeartR;
    private javax.swing.JCheckBox jCheckBoxIntestinesR;
    private javax.swing.JCheckBox jCheckBoxLiverR;
    private javax.swing.JCheckBox jCheckBoxLungR;
    private javax.swing.JCheckBox jCheckBoxkKidneyR;
    private javax.swing.JCheckBox jCheckPancreasR;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableReceiverDetails;
    private javax.swing.JTextField jTextReceviersName;
    // End of variables declaration//GEN-END:variables
private void populateTable(ArrayList <PatientVisit> patientList) {
        DefaultTableModel model=(DefaultTableModel) jTableReceiverDetails.getModel();
        model.setRowCount(0);
        for (PatientVisit pv:patientList){
            Object[] row =new Object[7];
            row[0]=pv.getId();
            row[1]=pv.getName();
            row[2]=pv.getAge();
            row[3]=pv.getDate();
            row[4]=pv.getOrgan();
            
            model.addRow(row);
        }
    }
}
